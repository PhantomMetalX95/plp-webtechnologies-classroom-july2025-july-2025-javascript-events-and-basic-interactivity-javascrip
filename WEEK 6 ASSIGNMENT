<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Interactive Web Application</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* CSS Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        :root {
            --primary: #3498db;
            --secondary: #2ecc71;
            --accent: #e74c3c;
            --dark: #2c3e50;
            --light: #ecf0f1;
            --text: #333;
            --bg: #f5f7fa;
            --card-bg: white;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        /* Dark Theme Variables */
        [data-theme="dark"] {
            --primary: #2980b9;
            --secondary: #27ae60;
            --accent: #c0392b;
            --dark: #ecf0f1;
            --light: #34495e;
            --text: #ecf0f1;
            --bg: #2c3e50;
            --card-bg: #34495e;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
        }

        body {
            background: var(--bg);
            color: var(--text);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
            transition: var(--transition);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        header {
            text-align: center;
            margin-bottom: 2rem;
            padding: 2rem;
            background: var(--card-bg);
            border-radius: 15px;
            box-shadow: var(--shadow);
            position: relative;
        }

        h1 {
            color: var(--dark);
            margin-bottom: 0.5rem;
            font-size: 2.5rem;
        }

        .subtitle {
            color: var(--primary);
            font-size: 1.2rem;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .card {
            background: var(--card-bg);
            border-radius: 15px;
            padding: 2rem;
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        h2 {
            color: var(--dark);
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
            border-bottom: 3px solid var(--primary);
        }

        h3 {
            color: var(--primary);
            margin: 1.5rem 0 1rem;
        }

        /* Theme Toggle */
        .theme-toggle {
            position: absolute;
            top: 20px;
            right: 20px;
        }

        .toggle-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: var(--transition);
        }

        .toggle-btn:hover {
            transform: scale(1.05);
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 1.5rem;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--dark);
        }

        input, select, textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
            transition: var(--transition);
            background: var(--card-bg);
            color: var(--text);
        }

        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .error {
            color: var(--accent);
            font-size: 0.9rem;
            margin-top: 0.25rem;
            display: none;
        }

        .input-error {
            border-color: var(--accent);
        }

        .input-success {
            border-color: var(--secondary);
        }

        /* Button Styles */
        .btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: var(--transition);
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn:hover {
            background: var(--dark);
            transform: scale(1.05);
        }

        .btn-secondary {
            background: var(--secondary);
        }

        .btn-accent {
            background: var(--accent);
        }

        /* Interactive Features */
        .counter-display {
            font-size: 3rem;
            font-weight: bold;
            text-align: center;
            color: var(--primary);
            margin: 1rem 0;
        }

        .counter-controls {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-bottom: 1rem;
        }

        .theme-switcher {
            display: flex;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .theme-btn {
            padding: 8px 15px;
            border: 2px solid var(--dark);
            background: var(--card-bg);
            color: var(--text);
            border-radius: 6px;
            cursor: pointer;
            transition: var(--transition);
        }

        .theme-btn.active {
            background: var(--dark);
            color: var(--card-bg);
        }

        .task-list {
            list-style: none;
            margin-top: 1rem;
        }

        .task-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem;
            background: var(--light);
            margin-bottom: 0.5rem;
            border-radius: 8px;
            transition: var(--transition);
        }

        .task-item:hover {
            background: #dfe6e9;
        }

        .task-item.completed {
            opacity: 0.7;
            text-decoration: line-through;
        }

        .task-actions {
            display: flex;
            gap: 0.5rem;
        }

        .task-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.8rem;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: var(--card-bg);
            padding: 2rem;
            border-radius: 15px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--dark);
        }

        /* NEW FEATURES STYLES */

        /* Game Section */
        .game-container {
            text-align: center;
            padding: 1rem;
        }

        .game-score {
            font-size: 2rem;
            font-weight: bold;
            margin: 1rem 0;
            color: var(--primary);
        }

        .game-buttons {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px;
            margin: 1rem 0;
        }

        .game-btn {
            padding: 15px;
            font-size: 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: var(--transition);
            background: var(--primary);
            color: white;
        }

        .game-btn:hover {
            transform: scale(1.1);
        }

        .game-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none;
        }

        .game-message {
            margin-top: 1rem;
            font-weight: bold;
            min-height: 24px;
        }

        /* FAQ Section */
        .faq-container {
            margin-top: 1rem;
        }

        .faq-item {
            margin-bottom: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
        }

        .faq-question {
            padding: 1rem;
            background: var(--light);
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 600;
        }

        .faq-answer {
            padding: 0 1rem;
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
        }

        .faq-item.active .faq-answer {
            padding: 1rem;
            max-height: 500px;
        }

        .faq-icon {
            transition: transform 0.3s ease;
        }

        .faq-item.active .faq-icon {
            transform: rotate(180deg);
        }

        /* Dropdown Menu */
        .dropdown {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .dropdown-btn {
            width: 100%;
            padding: 12px;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background: var(--card-bg);
            min-width: 100%;
            box-shadow: var(--shadow);
            border-radius: 8px;
            z-index: 1;
            overflow: hidden;
        }

        .dropdown-content a {
            color: var(--text);
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            transition: var(--transition);
        }

        .dropdown-content a:hover {
            background: var(--light);
        }

        .dropdown.active .dropdown-content {
            display: block;
        }

        /* Tabbed Interface */
        .tabs {
            margin-top: 1rem;
        }

        .tab-buttons {
            display: flex;
            border-bottom: 2px solid var(--light);
        }

        .tab-btn {
            padding: 12px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-weight: 600;
            color: var(--text);
            transition: var(--transition);
            border-bottom: 3px solid transparent;
        }

        .tab-btn.active {
            color: var(--primary);
            border-bottom: 3px solid var(--primary);
        }

        .tab-content {
            padding: 1rem 0;
        }

        .tab-pane {
            display: none;
        }

        .tab-pane.active {
            display: block;
            animation: fadeIn 0.5s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        /* Utility Classes */
        .hidden {
            display: none;
        }

        .text-center {
            text-align: center;
        }

        .mb-2 {
            margin-bottom: 2rem;
        }

        footer {
            text-align: center;
            margin-top: 3rem;
            padding: 2rem;
            background: var(--dark);
            color: white;
            border-radius: 15px;
        }

        @media (max-width: 768px) {
            .grid {
                grid-template-columns: 1fr;
            }
            
            .counter-controls, .game-buttons {
                flex-direction: column;
            }
            
            .game-buttons {
                grid-template-columns: 1fr;
            }
            
            h1 {
                font-size: 2rem;
            }
            
            .tab-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Enhanced Interactive Web App</h1>
            <p class="subtitle">Now with Light/Dark Mode, Games, FAQ, Dropdown & Tabs!</p>
            
            <!-- Light/Dark Mode Toggle -->
            <div class="theme-toggle">
                <button class="toggle-btn" id="themeToggle">
                    <i class="fas fa-moon"></i>
                    <span>Dark Mode</span>
                </button>
            </div>
        </header>

        <div class="grid">
            <!-- Registration Form Section -->
            <div class="card">
                <h2>User Registration</h2>
                <form id="registrationForm">
                    <div class="form-group">
                        <label for="fullName">Full Name</label>
                        <input type="text" id="fullName" placeholder="Enter your full name">
                        <div class="error" id="nameError">Please enter a valid name (min 2 characters)</div>
                    </div>

                    <div class="form-group">
                        <label for="email">Email Address</label>
                        <input type="email" id="email" placeholder="Enter your email">
                        <div class="error" id="emailError">Please enter a valid email address</div>
                    </div>

                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" id="password" placeholder="Create a password">
                        <div class="error" id="passwordError">Password must be at least 8 characters with uppercase, lowercase, and number</div>
                    </div>

                    <button type="submit" class="btn">
                        <i class="fas fa-user-plus"></i>
                        Register Account
                    </button>
                </form>
            </div>

            <!-- Interactive Counter Section -->
            <div class="card">
                <h2>Interactive Counter</h2>
                <div class="counter-display" id="counterValue">0</div>
                <div class="counter-controls">
                    <button class="btn btn-accent" id="decrementBtn">
                        <i class="fas fa-minus"></i>
                        Decrement
                    </button>
                    <button class="btn btn-secondary" id="resetBtn">
                        <i class="fas fa-redo"></i>
                        Reset
                    </button>
                    <button class="btn" id="incrementBtn">
                        <i class="fas fa-plus"></i>
                        Increment
                    </button>
                </div>
            </div>

            <!-- NEW: Button Game Section -->
            <div class="card">
                <h2>Click Speed Game</h2>
                <div class="game-container">
                    <div class="game-score" id="gameScore">0</div>
                    <p>Click the button as many times as you can in 10 seconds!</p>
                    <button class="btn btn-accent" id="gameButton">Click Me!</button>
                    <div class="game-message" id="gameMessage"></div>
                    <button class="btn btn-secondary" id="startGame">Start Game</button>
                </div>
            </div>

            <!-- NEW: FAQ Section -->
            <div class="card">
                <h2>Frequently Asked Questions</h2>
                <div class="faq-container">
                    <div class="faq-item">
                        <div class="faq-question">
                            What is this website about?
                            <i class="fas fa-chevron-down faq-icon"></i>
                        </div>
                        <div class="faq-answer">
                            This is an interactive web application demonstrating various JavaScript features including form validation, games, dark mode, and more!
                        </div>
                    </div>
                    <div class="faq-item">
                        <div class="faq-question">
                            How does the dark mode work?
                            <i class="fas fa-chevron-down faq-icon"></i>
                        </div>
                        <div class="faq-answer">
                            The dark mode uses CSS variables and JavaScript to toggle between light and dark color schemes. Your preference is saved in localStorage.
                        </div>
                    </div>
                    <div class="faq-item">
                        <div class="faq-question">
                            Is my data saved?
                            <i class="fas fa-chevron-down faq-icon"></i>
                        </div>
                        <div class="faq-answer">
                            Yes, tasks and theme preferences are saved in your browser's localStorage. Form data is not submitted to any server.
                        </div>
                    </div>
                </div>
            </div>

            <!-- NEW: Dropdown Menu Section -->
            <div class="card">
                <h2>Dropdown Menu</h2>
                <p>Select an option from the dropdown:</p>
                <div class="dropdown">
                    <button class="dropdown-btn" id="dropdownBtn">
                        Select an option
                        <i class="fas fa-chevron-down"></i>
                    </button>
                    <div class="dropdown-content">
                        <a href="#" data-value="option1">Option 1</a>
                        <a href="#" data-value="option2">Option 2</a>
                        <a href="#" data-value="option3">Option 3</a>
                        <a href="#" data-value="option4">Option 4</a>
                    </div>
                </div>
                <div id="dropdownResult" class="mt-2" style="font-weight: bold;"></div>
            </div>

            <!-- NEW: Tabbed Interface Section -->
            <div class="card">
                <h2>Tabbed Content</h2>
                <div class="tabs">
                    <div class="tab-buttons">
                        <button class="tab-btn active" data-tab="tab1">Overview</button>
                        <button class="tab-btn" data-tab="tab2">Features</button>
                        <button class="tab-btn" data-tab="tab3">Technology</button>
                    </div>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab1">
                            <h3>Welcome to Our Application</h3>
                            <p>This interactive web app showcases various JavaScript features and UI components. Explore the different sections to see them in action!</p>
                            <ul>
                                <li>Form validation</li>
                                <li>Interactive games</li>
                                <li>Dark/light mode</li>
                                <li>And much more!</li>
                            </ul>
                        </div>
                        <div class="tab-pane" id="tab2">
                            <h3>Key Features</h3>
                            <p>This application includes:</p>
                            <ul>
                                <li>Custom form validation</li>
                                <li>Interactive counter</li>
                                <li>Task manager with localStorage</li>
                                <li>Modal windows</li>
                                <li>Click speed game</li>
                                <li>Collapsible FAQ section</li>
                                <li>Dropdown menu</li>
                                <li>Tabbed interface</li>
                            </ul>
                        </div>
                        <div class="tab-pane" id="tab3">
                            <h3>Technology Stack</h3>
                            <p>This application is built with:</p>
                            <ul>
                                <li>HTML5 for structure</li>
                                <li>CSS3 with custom properties for styling</li>
                                <li>Vanilla JavaScript for interactivity</li>
                                <li>Font Awesome for icons</li>
                                <li>CSS Grid and Flexbox for layout</li>
                            </ul>
                            <p>No external frameworks or libraries are used for the core functionality.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal" id="welcomeModal">
            <div class="modal-content">
                <div class="modal-header">
                    <h2>Welcome! 🎉</h2>
                    <button class="close-modal" id="closeModal">&times;</button>
                </div>
                <p>Thank you for visiting our interactive web application. This modal is dynamically controlled by JavaScript!</p>
                <button class="btn mt-2" id="closeModalBtn">
                    <i class="fas fa-check"></i>
                    Got It!
                </button>
            </div>
        </div>

        <footer>
            <p>Enhanced Interactive Web Application &copy; 2023 | Now with 5 New Features!</p>
        </footer>
    </div>

    <script>
        // =============================================
        // MAIN APPLICATION CONTROLLER
        // =============================================

        document.addEventListener('DOMContentLoaded', function() {
            // Initialize all interactive features
            initThemeToggle();
            initFormValidation();
            initCounter();
            initGame();
            initFAQ();
            initDropdown();
            initTabs();
            initModal();
        });

        // =============================================
        // NEW FEATURE 1: LIGHT/DARK MODE TOGGLE
        // =============================================

        function initThemeToggle() {
            const themeToggle = document.getElementById('themeToggle');
            const themeIcon = themeToggle.querySelector('i');
            const themeText = themeToggle.querySelector('span');
            
            // Check for saved theme or prefer-color-scheme
            const savedTheme = localStorage.getItem('theme');
            const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
            
            if (savedTheme === 'dark' || (!savedTheme && systemPrefersDark)) {
                document.documentElement.setAttribute('data-theme', 'dark');
                themeIcon.className = 'fas fa-sun';
                themeText.textContent = 'Light Mode';
            } else {
                document.documentElement.setAttribute('data-theme', 'light');
                themeIcon.className = 'fas fa-moon';
                themeText.textContent = 'Dark Mode';
            }
            
            themeToggle.addEventListener('click', function() {
                const currentTheme = document.documentElement.getAttribute('data-theme');
                
                if (currentTheme === 'light') {
                    document.documentElement.setAttribute('data-theme', 'dark');
                    themeIcon.className = 'fas fa-sun';
                    themeText.textContent = 'Light Mode';
                    localStorage.setItem('theme', 'dark');
                } else {
                    document.documentElement.setAttribute('data-theme', 'light');
                    themeIcon.className = 'fas fa-moon';
                    themeText.textContent = 'Dark Mode';
                    localStorage.setItem('theme', 'light');
                }
            });
        }

        // =============================================
        // NEW FEATURE 2: CLICK SPEED GAME
        // =============================================

        function initGame() {
            const gameButton = document.getElementById('gameButton');
            const startButton = document.getElementById('startGame');
            const gameScore = document.getElementById('gameScore');
            const gameMessage = document.getElementById('gameMessage');
            
            let score = 0;
            let timeLeft = 10;
            let gameActive = false;
            let timer;
            
            startButton.addEventListener('click', startGame);
            gameButton.addEventListener('click', handleGameClick);
            
            function startGame() {
                score = 0;
                timeLeft = 10;
                gameActive = true;
                gameScore.textContent = score;
                gameMessage.textContent = 'Game started! Click fast!';
                gameButton.disabled = false;
                startButton.disabled = true;
                
                // Update timer every second
                timer = setInterval(function() {
                    timeLeft--;
                    gameMessage.textContent = `Time left: ${timeLeft}s`;
                    
                    if (timeLeft <= 0) {
                        endGame();
                    }
                }, 1000);
            }
            
            function handleGameClick() {
                if (gameActive) {
                    score++;
                    gameScore.textContent = score;
                    
                    // Add visual feedback
                    gameButton.style.transform = 'scale(0.9)';
                    setTimeout(() => {
                        gameButton.style.transform = 'scale(1)';
                    }, 100);
                }
            }
            
            function endGame() {
                gameActive = false;
                clearInterval(timer);
                gameButton.disabled = true;
                startButton.disabled = false;
                
                let message = `Time's up! Your score: ${score}. `;
                if (score < 20) {
                    message += "Keep practicing!";
                } else if (score < 40) {
                    message += "Good job!";
                } else {
                    message += "Amazing speed!";
                }
                
                gameMessage.textContent = message;
            }
        }

        // =============================================
        // NEW FEATURE 3: COLLAPSIBLE FAQ
        // =============================================

        function initFAQ() {
            const faqItems = document.querySelectorAll('.faq-item');
            
            faqItems.forEach(item => {
                const question = item.querySelector('.faq-question');
                
                question.addEventListener('click', function() {
                    // Close all other items
                    faqItems.forEach(otherItem => {
                        if (otherItem !== item && otherItem.classList.contains('active')) {
                            otherItem.classList.remove('active');
                        }
                    });
                    
                    // Toggle current item
                    item.classList.toggle('active');
                });
            });
        }

        // =============================================
        // NEW FEATURE 4: DROPDOWN MENU
        // =============================================

        function initDropdown() {
            const dropdownBtn = document.getElementById('dropdownBtn');
            const dropdown = document.querySelector('.dropdown');
            const dropdownOptions = document.querySelectorAll('.dropdown-content a');
            const dropdownResult = document.getElementById('dropdownResult');
            
            // Toggle dropdown on button click
            dropdownBtn.addEventListener('click', function() {
                dropdown.classList.toggle('active');
            });
            
            // Handle option selection
            dropdownOptions.forEach(option => {
                option.addEventListener('click', function(e) {
                    e.preventDefault();
                    const value = this.getAttribute('data-value');
                    const text = this.textContent;
                    
                    dropdownBtn.innerHTML = `${text} <i class="fas fa-chevron-down"></i>`;
                    dropdownResult.textContent = `You selected: ${text}`;
                    dropdownResult.style.color = 'var(--secondary)';
                    
                    // Close dropdown
                    dropdown.classList.remove('active');
                });
            });
            
            // Close dropdown when clicking outside
            document.addEventListener('click', function(e) {
                if (!dropdown.contains(e.target)) {
                    dropdown.classList.remove('active');
                }
            });
        }

        // =============================================
        // NEW FEATURE 5: TABBED INTERFACE
        // =============================================

        function initTabs() {
            const tabButtons = document.querySelectorAll('.tab-btn');
            const tabPanes = document.querySelectorAll('.tab-pane');
            
            tabButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const tabId = this.getAttribute('data-tab');
                    
                    // Update active button
                    tabButtons.forEach(btn => btn.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Show active tab content
                    tabPanes.forEach(pane => pane.classList.remove('active'));
                    document.getElementById(tabId).classList.add('active');
                });
            });
        }

        // =============================================
        // EXISTING FEATURES (Modified for new layout)
        // =============================================

        function initFormValidation() {
            const form = document.getElementById('registrationForm');
            
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                alert('Form validation would happen here! In a real app, this would submit data.');
            });
        }

        function initCounter() {
            let count = 0;
            const counterDisplay = document.getElementById('counterValue');
            const incrementBtn = document.getElementById('incrementBtn');
            const decrementBtn = document.getElementById('decrementBtn');
            const resetBtn = document.getElementById('resetBtn');

            function updateCounter() {
                counterDisplay.textContent = count;
                if (count > 0) {
                    counterDisplay.style.color = 'var(--secondary)';
                } else if (count < 0) {
                    counterDisplay.style.color = 'var(--accent)';
                } else {
                    counterDisplay.style.color = 'var(--primary)';
                }
            }

            incrementBtn.addEventListener('click', function() {
                count++;
                updateCounter();
            });

            decrementBtn.addEventListener('click', function() {
                count--;
                updateCounter();
            });

            resetBtn.addEventListener('click', function() {
                count = 0;
                updateCounter();
            });

            updateCounter();
        }

        function initModal() {
            const modal = document.getElementById('welcomeModal');
            const closeModalBtn = document.getElementById('closeModalBtn');
            const closeModalX = document.getElementById('closeModal');

            function openModal() {
                modal.classList.add('active');
            }

            function closeModal() {
                modal.classList.remove('active');
            }

            // Auto-open modal after 2 seconds
            setTimeout(openModal, 2000);

            closeModalBtn.addEventListener('click', closeModal);
            closeModalX.addEventListener('click', closeModal);

            modal.addEventListener('click', function(event) {
                if (event.target === modal) {
                    closeModal();
                }
            });

            document.addEventListener('keydown', function(event) {
                if (event.key === 'Escape' && modal.classList.contains('active')) {
                    closeModal();
                }
            });
        }
    </script>
</body>
</html>
